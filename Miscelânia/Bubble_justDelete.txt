==6005== Memcheck, a memory error detector
==6005== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==6005== Using Valgrind-3.16.1 and LibVEX; rerun with -h for copyright info
==6005== Command: ./bin/tp2.out
==6005== Parent PID: 646
==6005== 
==6005== Invalid read of size 4
==6005==    at 0x10B979: List::reallocate(int) (lista_encadeada.cpp:29)
==6005==    by 0x10CF3C: createGraph(Grafo*) (main.cpp:104)
==6005==    by 0x10CA7A: main (main.cpp:36)
==6005==  Address 0x4d75d7c is 0 bytes after a block of size 12 alloc'd
==6005==    at 0x483950F: operator new[](unsigned long) (vg_replace_malloc.c:431)
==6005==    by 0x10B9CA: List::reallocate(int) (lista_encadeada.cpp:32)
==6005==    by 0x10CF3C: createGraph(Grafo*) (main.cpp:104)
==6005==    by 0x10CA7A: main (main.cpp:36)
==6005== 
==6005== 
==6005== Process terminating with default action of signal 27 (SIGPROF)
==6005==    at 0x4B30486: __open_nocancel (open64_nocancel.c:45)
==6005==    by 0x4B3DB7F: write_gmon (gmon.c:370)
==6005==    by 0x4B3E31A: _mcleanup (gmon.c:444)
==6005==    by 0x4A7BAC5: __cxa_finalize (cxa_finalize.c:83)
==6005==    by 0x10A302: ??? (in /home/devdias93/ED/TP2/bin/tp2.out)
==6005==    by 0x4010372: _dl_fini (dl-fini.c:138)
==6005==    by 0x4A7B4D6: __run_exit_handlers (exit.c:108)
==6005==    by 0x4A7B679: exit (exit.c:139)
==6005==    by 0x4A63D10: (below main) (libc-start.c:342)
==6005== 
==6005== HEAP SUMMARY:
==6005==     in use at exit: 22,086 bytes in 1 blocks
==6005==   total heap usage: 34 allocs, 33 frees, 101,127 bytes allocated
==6005== 
==6005== LEAK SUMMARY:
==6005==    definitely lost: 0 bytes in 0 blocks
==6005==    indirectly lost: 0 bytes in 0 blocks
==6005==      possibly lost: 0 bytes in 0 blocks
==6005==    still reachable: 22,086 bytes in 1 blocks
==6005==         suppressed: 0 bytes in 0 blocks
==6005== Rerun with --leak-check=full to see details of leaked memory
==6005== 
==6005== For lists of detected and suppressed errors, rerun with: -s
==6005== ERROR SUMMARY: 2 errors from 1 contexts (suppressed: 0 from 0)
